/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package samantapreka_projekt2_sew;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author samantapreka
 */
public class GUI extends javax.swing.JFrame {
    //Globale variable Deklarieren
    Connection con = null;
    PreparedStatement prepInsertProduct = null;
    PreparedStatement prepDeleteProduct=null;
    PreparedStatement prepUpdateProduct=null;
    PreparedStatement prepSelect = null;
    ResultSet resSelect = null;

    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        //Default Werte fuer die Labels und Text Fields geben
        lblServer.setText("Sever");
        txtServer.setText("185.62.175.221"); 
        lblPort.setText("Port");
        txtPort.setText("3306");
        lblUsername.setText("Username");
        lblPassword.setText("Password");
        txtUsername.setText("samantapreka");
        txtPassword.setText("H339sampre");
        btnConnect.setText("Connect");
        btnDisconnect.setText("Disconnect");
        
        try {
            // TODO code application logic here
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            System.out.println("Could not load mysql driver ");
            // DIALOG BOX
            javax.swing.JOptionPane.showMessageDialog(this, "Datenbanktreiber konnte nicht geladen werden");
            System.exit(1);
        }  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblServer = new javax.swing.JLabel();
        txtServer = new javax.swing.JTextField();
        lblPort = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        btnConnect = new javax.swing.JButton();
        btnDisconnect = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblManifactured = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtManifactured = new javax.swing.JTextField();
        btnPrevious = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        lblProduziert = new javax.swing.JLabel();
        txtProduziert = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblServer.setText("jLabel1");

        lblPort.setText("jLabel1");

        txtPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPortActionPerformed(evt);
            }
        });

        lblUsername.setText("jLabel1");

        lblPassword.setText("jLabel1");

        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        btnDisconnect.setText("Disconnect");
        btnDisconnect.setEnabled(false);
        btnDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisconnectActionPerformed(evt);
            }
        });

        lblId.setText("ID");

        lblName.setText("Name");

        lblManifactured.setText("Manifactured");

        txtId.setEnabled(false);

        txtName.setEnabled(false);

        txtManifactured.setEnabled(false);
        txtManifactured.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManifacturedActionPerformed(evt);
            }
        });

        btnPrevious.setText("Prev");
        btnPrevious.setEnabled(false);
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.setEnabled(false);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnNext.setText("Next");
        btnNext.setEnabled(false);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        lblProduziert.setText("Produziert");

        txtProduziert.setEnabled(false);

        btnUpdate.setText("Update");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.setEnabled(false);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblId)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblProduziert)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtProduziert, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblManifactured)
                                .addGap(18, 18, 18)
                                .addComponent(txtManifactured, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPrevious, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPort)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblServer)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPassword)
                            .addComponent(lblUsername))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(txtPassword))
                        .addGap(36, 36, 36)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDisconnect)
                    .addComponent(btnConnect)
                    .addComponent(btnNext))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblServer)
                            .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConnect))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblPort, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnDisconnect)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUsername)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPassword)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPrevious)
                            .addComponent(btnNext))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblName)
                                .addGap(17, 17, 17))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProduziert)
                            .addComponent(txtProduziert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManifactured)
                            .addComponent(txtManifactured, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPortActionPerformed

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        try {
            con = DriverManager.getConnection("jdbc:mysql://"+txtServer.getText() + ":"+txtPort.getText()+"/1920_4ax_samantapreka_kosmetik", txtUsername.getText(), txtPassword.getText());
            // wenn ich mich mit dem Datenbank verbinde dann habe ich keine Moeglichkeit um mich
            // nocheinmal zu reconnecten also das mach keinen Sinn deshalb habe ich das button Connect,
            // server port enabled false gemacht und id habe ich mir gedacht ist es ist autoincrement 
            // es darf nicht geandert werden
            btnConnect.setEnabled(false);
            btnDisconnect.setEnabled(true);
            txtServer.setEnabled(false);
            txtPort.setEnabled(false);
            txtUsername.setEnabled(false);
            txtPassword.setEnabled(false);
            txtId.setEnabled(false);
            txtName.setEnabled(true);
            txtProduziert.setEnabled(true);
            txtManifactured.setEnabled(true);
            btnAdd.setEnabled(true);
            btnUpdate.setEnabled(true);
            btnClear.setEnabled(true);
            btnDelete.setEnabled(true);
            btnPrevious.setEnabled(true);
            btnNext.setEnabled(true);
            
            
        } catch (SQLException ex) {
            System.out.println("Could not load to world database");
            javax.swing.JOptionPane.showMessageDialog(this, "Datenbanktreiber konnte nicht geladen werden");
        }
        try {
            // selektieren alles und executen
            prepSelect = con.prepareStatement("SELECT * FROM product");
            resSelect = prepSelect.executeQuery();              
            if(resSelect.next()){
               int id=resSelect.getInt("id");
               String name= resSelect.getString("name");
               String manifactured= resSelect.getString("manifactured");
               String produziert= resSelect.getString("produziert");
               txtId.setText(""+id);
               txtName.setText(name);
               txtManifactured.setText(manifactured);
               txtProduziert.setText(produziert);
            }
        } catch (SQLException ex) {
            System.out.println("Could not do select statement");
            javax.swing.JOptionPane.showMessageDialog(this, "could not...");
        }
    }//GEN-LAST:event_btnConnectActionPerformed
    // disconnect button
    private void btnDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisconnectActionPerformed

        // das umgekehrte vom connect button
        try {
            con.close();
            btnConnect.setEnabled(true);
            btnDisconnect.setEnabled(false);
            txtServer.setEnabled(true);
            txtPort.setEnabled(true);
            txtUsername.setEnabled(true);
            txtPassword.setEnabled(true);
            txtId.setEnabled(false);
            txtName.setEnabled(false);
            txtProduziert.setEnabled(false);
            txtManifactured.setEnabled(false);
            btnAdd.setEnabled(false);
            btnUpdate.setEnabled(false);
            btnClear.setEnabled(false);
            btnDelete.setEnabled(false);
            btnPrevious.setEnabled(false);
            btnNext.setEnabled(false);
        } catch (Exception ex) {
            // falls es nicht mit dem datenbank verbinden kann
            System.out.println("Could not load to database");
            javax.swing.JOptionPane.showMessageDialog(this, "You could not disconnect ");
        }
    }//GEN-LAST:event_btnDisconnectActionPerformed
    // next button
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        try {
            if(resSelect.next()){
            //wenn wir next haben, dann wird die erste die kommt gewaehlt
            }else {
                resSelect.first();
            } 
             int id=resSelect.getInt("id");
                String name= resSelect.getString("name");
                String produziert= resSelect.getString("produziert");
                String manifactured= resSelect.getString("manifactured");
                  
                txtId.setText(""+id);
                txtName.setText(name);
                txtProduziert.setText(produziert);
                txtManifactured.setText(manifactured); 

            } catch (SQLException ex) {

                System.out.println("Could not do select statement");

                javax.swing.JOptionPane.showMessageDialog(this, "could not...");

            }
    }//GEN-LAST:event_btnNextActionPerformed
    //button previous
    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        try {
            if(resSelect.previous()){
               
            }else {
                // hier wird das letzte gewaehlt
                resSelect.last();
            } 
             int id=resSelect.getInt("id");
                String name= resSelect.getString("name");
                String produziert= resSelect.getString("produziert");
                String manifactured= resSelect.getString("manifactured");
                  
                txtId.setText(""+id);
                txtName.setText(name);
                txtProduziert.setText(produziert);
                txtManifactured.setText(manifactured); 

            } catch (SQLException ex) {

                System.out.println("Could not do select statement");

                javax.swing.JOptionPane.showMessageDialog(this, "could not...");

            }
    }//GEN-LAST:event_btnPreviousActionPerformed
    //button addieren, also ein neues produkt hinzufuegen
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        //insert statement mit empty values, die dann von uns gegeben werden
        String sql="INSERT INTO product(name,produziert,manifactured) VALUES (?,?,?)";
        try {
            prepInsertProduct=con.prepareStatement(sql);
            prepInsertProduct.setString(1, txtName.getText());
            prepInsertProduct.setString(2, txtProduziert.getText());
            prepInsertProduct.setString(3, txtManifactured.getText());
            int rows_changes = prepInsertProduct.executeUpdate();
            if (rows_changes > 0){
                javax.swing.JOptionPane.showMessageDialog(this, "Product wurde eingefuegt!");
            }
            else {
                javax.swing.JOptionPane.showMessageDialog(this, "Product konnte nicht eingefuegt werden!");
            }
            resSelect = prepSelect.executeQuery();
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed
    // ich habe auch dieser Button hinzugefuegt, damit ich alle felder sauber setzen kann
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtId.setText("");
        txtName.setText("");
        txtProduziert.setText("");
        txtManifactured.setText("");
    }//GEN-LAST:event_btnClearActionPerformed
    //delete button, die id wo wir es loeschen wollen
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String sql="DELETE FROM product WHERE ID=?";

        try{
            prepDeleteProduct = con.prepareStatement(sql);
            prepDeleteProduct.setInt(1, Integer.parseInt(txtId.getText()));
            //falls es gibt eine Aenderung bei der spalten, dann wird es ausgefuehrt
            int rows_changes = prepDeleteProduct.executeUpdate();           

            if (rows_changes > 0){
                javax.swing.JOptionPane.showMessageDialog(this, "Product geloscht!");
            }
            else {
                javax.swing.JOptionPane.showMessageDialog(this, "Konnte nicht Product loschen");
            }
            //nachdem ein produkt geloescht wird, die Felder auf leer stellen
            txtId.setText("");
            txtName.setText("");
            txtManifactured.setText("");
            txtProduziert.setText("");

            resSelect = prepSelect.executeQuery();
        }
         catch (SQLException ex) {

            System.out.println("Product konnte nicht geloescht werden");

            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);

        }
    }//GEN-LAST:event_btnDeleteActionPerformed
    //update buton
    //falls wir eine Aenderung machen, dann klicken wir auf Update, dann er uebernimmt es
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String sql="Update product set name=?,produziert=?,manifactured=? where id=?";
        try {
            prepInsertProduct=con.prepareStatement(sql);
            prepInsertProduct.setString(1, txtName.getText());
            prepInsertProduct.setString(2, txtProduziert.getText());
            prepInsertProduct.setString(3, txtManifactured.getText());
            prepInsertProduct.setString(4, txtId.getText());
            int rows_changes = prepInsertProduct.executeUpdate();
            if (rows_changes > 0){
                javax.swing.JOptionPane.showMessageDialog(this, "Product wurde geaendert!");
            }
            else {
                javax.swing.JOptionPane.showMessageDialog(this, "Product konnte nicht geaendert werden!");
            }
            resSelect = prepSelect.executeQuery();
            if(resSelect.next()){
            }else {
                resSelect.first();
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtManifacturedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManifacturedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManifacturedActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDisconnect;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblManifactured;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPort;
    private javax.swing.JLabel lblProduziert;
    private javax.swing.JLabel lblServer;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtManifactured;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtProduziert;
    private javax.swing.JTextField txtServer;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
